// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/Align.h"
#include "Commands/AutoCrateApproach.h"
#include "Commands/AutoTurn.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/CloseBotClaw.h"
#include "Commands/CrateGet.h"
#include "Commands/DeliverCoopCrate.h"
#include "Commands/Drive.h"
#include "Commands/DriveToAutoZone.h"
#include "Commands/DriveToStep.h"
#include "Commands/EncoderDrive.h"
#include "Commands/FloorSelectionDown.h"
#include "Commands/FloorSelectionUp.h"
#include "Commands/GoToFloor.h"
#include "Commands/Grab.h"
#include "Commands/OpenBotClaw.h"
#include "Commands/ReadJoystickElevator.h"
#include "Commands/RotateAlign.h"
#include "Commands/Squeeze.h"
#include "Commands/Stack.h"
#include "Commands/ToggleBottomClaw.h"
#include "Commands/TogglePlatformCompensation.h"
#include "Commands/TriplePlay.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	pad = new Joystick(2);
	
	p10 = new JoystickButton(pad, 10);
	p10->WhileHeld(new TogglePlatformCompensation());
	p9 = new JoystickButton(pad, 9);
	p9->WhenPressed(new GoToFloor());
	p8 = new JoystickButton(pad, 8);
	p8->WhenPressed(new CloseBotClaw());
	p7 = new JoystickButton(pad, 7);
	p7->WhenPressed(new FloorSelectionDown());
	p6 = new JoystickButton(pad, 6);
	p6->WhenPressed(new OpenBotClaw());
	p5 = new JoystickButton(pad, 5);
	p5->WhenPressed(new FloorSelectionUp());
	joystick2 = new Joystick(0);
	
	joystick1 = new Joystick(1);
	
     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Triple Play", new TriplePlay());

	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("Drive", new Drive());

	SmartDashboard::PutData("Open Bot Claw", new OpenBotClaw());

	SmartDashboard::PutData("Close Bot Claw", new CloseBotClaw());

	SmartDashboard::PutData("FloorSelectionUp", new FloorSelectionUp());

	SmartDashboard::PutData("FloorSelectionDown", new FloorSelectionDown());

	SmartDashboard::PutData("RotateAlign", new RotateAlign());

	SmartDashboard::PutData("Squeeze", new Squeeze());

	SmartDashboard::PutData("TogglePlatformCompensation", new TogglePlatformCompensation());

	SmartDashboard::PutData("Align", new Align());

	SmartDashboard::PutData("Grab", new Grab());

	SmartDashboard::PutData("EncoderDrive", new EncoderDrive());

	SmartDashboard::PutData("Stack", new Stack());

	SmartDashboard::PutData("CrateGet", new CrateGet());

	SmartDashboard::PutData("ToggleBottomClaw", new ToggleBottomClaw());

	SmartDashboard::PutData("ReadJoystickElevator", new ReadJoystickElevator());

	SmartDashboard::PutData("Deliver Coop Crate", new DeliverCoopCrate());

	SmartDashboard::PutData("AutoTurn", new AutoTurn());

	SmartDashboard::PutData("Drive To Step", new DriveToStep());

	SmartDashboard::PutData("AutoCrateApproach", new AutoCrateApproach());

	SmartDashboard::PutData("Drive To Auto Zone", new DriveToAutoZone());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

Joystick* OI::getPad() {
	return pad;
}

Joystick* OI::getJoystick2() {
	return joystick2;
}

Joystick* OI::getJoystick1() {
	return joystick1;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
